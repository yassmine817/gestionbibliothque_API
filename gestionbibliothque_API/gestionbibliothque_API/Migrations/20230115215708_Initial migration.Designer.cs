// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gestionbibliothque_API.DataModels;

namespace gestionbibliothque_API.Migrations
{
    [DbContext(typeof(EmployerAdminContext))]
    [Migration("20230115215708_Initial migration")]
    partial class Initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("gestionbibliothque_API.DataModels.Auteurs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CodeLivre")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Auteurs");
                });

            modelBuilder.Entity("gestionbibliothque_API.DataModels.Livre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnneEdition")
                        .HasColumnType("int");

                    b.Property<Guid?>("AuteursId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTypeLivre")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Langue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nbpage")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TypeLivreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("imageLivreURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("maisonEdition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("prixAchat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuteursId");

                    b.HasIndex("TypeLivreId");

                    b.ToTable("Livre");
                });

            modelBuilder.Entity("gestionbibliothque_API.DataModels.TypeLivre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeLivres");
                });

            modelBuilder.Entity("gestionbibliothque_API.DataModels.Livre", b =>
                {
                    b.HasOne("gestionbibliothque_API.DataModels.Auteurs", "Auteurs")
                        .WithMany()
                        .HasForeignKey("AuteursId");

                    b.HasOne("gestionbibliothque_API.DataModels.TypeLivre", "TypeLivre")
                        .WithMany()
                        .HasForeignKey("TypeLivreId");

                    b.Navigation("Auteurs");

                    b.Navigation("TypeLivre");
                });
#pragma warning restore 612, 618
        }
    }
}
